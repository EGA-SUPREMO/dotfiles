[user]
	email = cxiesestro@gmail.com
	name = EGA-SUPREMO
	
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	grep = auto
[core]
	editor = nano -r 72
	autocrlf = input
[help]
	autocorrect = 50
[filter "signingkey"]
	smudge = sed \"s/
	clean = sed \"s/
[receive]
	denyNonFastForwards = true
[alias]
	st = status
	br = branch
	cm = commit
	cp = cherry-pick
	cme = !git add -A && git commit
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = commit -am "WIP"
	undo = reset HEAD~1 --mixed
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	up = pull --prune
	sync = !git up && git push
#	latest = diff of latest commit

    ru = remote update
    rup = remote update --prune
    ruffwd = !git remote update && git ffwd
    rupffwd = !git remote update --prune && git ffwd

	co = checkout
	cob = checkout -b
	cobf = "!f() { git checkout -b feature/$1; }; f"
	cobr = "!f() { git checkout -b release/$1; }; f"
	cobh = "!f() { git checkout -b hotfix/$1; }; f"
	cobb = "!f() { git checkout -b bugfix/$1; }; f"

	cof = "!f() { git checkout feature/$1; }; f"
	cor = "!f() { git checkout release/$1; }; f"
	coh = "!f() { git checkout hotfix/$1; }; f"
#	cob = "!f() { git checkout bugfix/$1; }; f"

#	f = "!f() { echo feature/$1; }; f"

	fixup = commit --amend

	default = !git remote show origin | grep 'HEAD branch' | cut -d' ' -f5
	aliases = "!git config -l | grep ^alias\\. | cut -c 7-"

	brclean = "!f() { DEFAULT=$(git default); git branch --merged ${1-$DEFAULT} | grep -v " ${1-$DEFAULT}$" | xargs git branch -d; }; f"
	brdone = "!f() { DEFAULT=$(git default); git checkout ${1-$DEFAULT} && git up && git brclean ${1-$DEFAULT}; }; f"
	migrate = "!f(){ DEFAULT=$(git default); CURRENT=$(git symbolic-ref --short HEAD); git checkout -b $1 && git branch --force $CURRENT ${3-$CURRENT@{u}} && git rebase --onto ${2-$DEFAULT} $CURRENT; }; f"
	brunsafed = "! DEFAULT=$(git default); git branch | grep -v $DEFAULT | grep -v "master" | grep -v "dev" | grep -v "develop" | grep -v "development" | xargs git branch -D"
	brd = !git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done

	return = "!f() { DEFAULT=$(git default); git checkout ${1-$DEFAULT}; }; f"

	glog = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	sdlog = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	slog = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
[push]
	default = current
